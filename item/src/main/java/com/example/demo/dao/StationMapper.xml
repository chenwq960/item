<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.StationMapper" >
 <cache/>
  <resultMap id="BaseResultMap" type="com.example.demo.po.Station" >
    <id column="station_id" property="stationId" jdbcType="INTEGER" />
    <result column="station_name" property="stationName" jdbcType="VARCHAR" />
    <result column="province_id" property="provinceId" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="VARCHAR"/>
    <result column="county_id" property="countyId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="DECIMAL" />
    <result column="latitude" property="latitude" jdbcType="DECIMAL" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <association column="create_user" property="currentUserName" select="com.example.demo.dao.RoleMapper.selectUserName"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    station_id, station_name, province_id, city_id, county_id, address, longitude, latitude, 
    create_user, create_time, update_user, update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_station
    where station_id = #{stationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_station
    where station_id = #{stationId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.po.Station" >
    insert into tb_station (station_id, station_name, province_id, 
      city_id, county_id, address, 
      longitude, latitude, create_user, 
      create_time, update_user, update_time, 
      is_delete)
    values (#{stationId,jdbcType=INTEGER}, #{stationName,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{countyId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.po.Station" >
    insert into tb_station
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        station_id,
      </if>
      <if test="stationName != null" >
        station_name,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="stationName != null" >
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="countyId != null" >
        #{countyId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.po.Station" >
    update tb_station
    <set >
      <if test="stationName != null" >
        station_name = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where station_id = #{stationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.po.Station" >
    update tb_station
    set station_name = #{stationName,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      county_id = #{countyId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIT}
    where station_id = #{stationId,jdbcType=INTEGER}
  </update>
  
  <select id="selectList" resultMap="BaseResultMap">
	  	SELECT
		s.station_id,
		s.address,
		s.longitude,
		s.latitude,
		s.create_user,
		s.create_time,
		s.update_user,
		s.station_name,
		s.update_time,
		s.is_delete,
		r.region_name AS province_id,
		a.region_name AS city_id,
		b.region_name AS county_id 
	FROM
		tb_station s
		INNER JOIN tb_region r ON s.province_id = r.region_id
		INNER JOIN tb_region a ON s.city_id = a.region_id
		INNER JOIN tb_region b ON s.county_id = b.region_id
		where s.is_delete = 0
		<if test="searchKey != null and searchKey != ''">
			and s.station_name like concat('%',#{searchKey},'%')
			or s.address like concat('%',#{searchKey},'%')
		</if>
  </select>
  
  
  <!-- <update id="updateStationIsdelete">
  		update tb_station set is_delete = 1 where station_id = 1
  </update> -->
  
  
  
</mapper>